<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.parkinfo.dao.AreaDAO" >
  <resultMap id="BaseResultMap" type="cn.parkinfo.model.Area" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="zoneId" property="zoneid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="other" property="other" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, number, zoneId, name, contact, phone, date, other
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.parkinfo.model.Area" >
    insert into area (id, number, zoneId, 
      name, contact, phone, 
      date, other)
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{zoneid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{date,jdbcType=TIMESTAMP}, #{other,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.parkinfo.model.Area" >
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides="," >
       <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="zoneid != null" >
        zoneId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="zoneid != null" >
        #{zoneid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.parkinfo.model.Area" >
     update area
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="zoneid != null" >
        zoneId = #{zoneid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.parkinfo.model.Area" >
     update area
    set number = #{number,jdbcType=VARCHAR},
      zoneId = #{zoneid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      other = #{other,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCount">
  	select count(*) from area 
  </select>
  <select id="getByStartAndCount" resultType="cn.parkinfo.model.Area">
  	select a.id,a.number,a.name,a.zoneid,z.name as zoneCenterName,a.contact,a.phone,a.date,
  	a.other from area as a left join zoneCenter as z on z.id=a.zoneid
  	 limit #{start},#{count}
  </select>
  <select id="getByZoneCenterId" resultType="cn.parkinfo.model.Area">
  	select * from area where zoneid=#{zoneid}
  </select>
</mapper>